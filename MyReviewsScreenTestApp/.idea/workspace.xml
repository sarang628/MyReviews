<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AndroidLayouts">
    <shared>
      <config />
    </shared>
  </component>
  <component name="AndroidLogFilters">
    <option name="TOOL_WINDOW_CUSTOM_FILTER" value="exception" />
    <option name="TOOL_WINDOW_CONFIGURED_FILTER" value="Show only selected application" />
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="NONE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="edd5f021-e0ed-412e-8268-70eedc64a5a2" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/../../Feed" beforeDir="false" afterPath="$PROJECT_DIR$/../../Feed" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[/Users/sarangyang/.android/avd/Pixel_5_API_32.avd]" />
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Kotlin File" />
        <option value="Kotlin Class" />
        <option value="Kotlin Data Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../.." />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="ProjectId" id="27b9YD3giknEsUrPj9oMJ7lxl6Q" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="RunOnceActivity.cidr.known.project.marker" value="true" />
    <property name="WORKMANAGER_INSPECTOR_NOTIFICATION_DISMISSED" value="true" />
    <property name="cidr.known.project.marker" value="true" />
    <property name="com.android.tools.idea.sqlite.queryhistory" value="select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;and FeedData.user_id = ('0') and FeedData.restaurant_id = ('0')&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and FeedData.user_id = ('0') and FeedData.restaurant_id = ('0')&#10;        &#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;and FeedData.user_id = ('0') and FeedData.restaurant_id = ('0')&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and FeedData.user_id = ('0') and FeedData.restaurant_id = ('0')&#10;        &#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;and FeedData.user_id = ('0') and FeedData.restaurant_id = ('0')&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and FeedData.user_id = ('0') and FeedData.restaurant_id = ('0')&#10;        &#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;and FeedData.user_id = ('0') and FeedData.restaurant_id = ('0')&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and FeedData.user_id = ('0') and FeedData.restaurant_id = ('0')&#10;        &#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;and FeedData.user_id = ('0') and FeedData.restaurant_id = ('0')&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and FeedData.user_id = ('0') and FeedData.restaurant_id = ('0')&#10;        &#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and FeedData.user_id = ('0') and FeedData.restaurant_id = ('0')&#10;        &#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and FeedData.user_id = ('0') and FeedData.restaurant_id = ('0')&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and FeedData.user_id = ('0') and FeedData.restaurant_id = ('0')&#10;        &#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and user_id = ('0') and restaurant_id = ('0')&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and user_id = ('0') and restaurant_id = ('0')&#10;        &#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and&#10;user_id = ('0') and restaurant_id = ('0')&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and user_id = ('0') and restaurant_id = ('0')&#10;        &#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and&#10;user_id = ('0') and restaurant_id = ('0')&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and&#10;user_id = ('0') and restaurant_id = ('0')&#10;        &#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and&#10;user_id = ('0') and restaurant_id = ('0')&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and&#10;user_id = ('0') and restaurant_id = ('0') order by FeedData.create_date desc&#10;        &#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;        &#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and&#10;user_id = ('0') and restaurant_id = ('0') order by FeedData.create_date desc&#10;        &#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;and&#10;user_id = ('0') and restaurant_id = ('0') order by FeedData.create_date desc&#10;        &#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;        &#10;select FeedData.review_id&#10;            ,picture_url&#10;            ,rating&#10;            ,contents&#10;            ,FeedData.create_date&#10;            ,max(ReviewImage.picture_id) as picture_id&#10;            from FeedData left outer join ReviewImage   &#10;            on FeedData.review_id = ReviewImage.review_id&#10;            union&#10;            select FeedData.review_id&#10;            ,picture_url&#10;            ,rating&#10;            ,contents&#10;            ,FeedData.create_date&#10;            ,ReviewImage.picture_id&#10;            from FeedData left outer join ReviewImage   &#10;            on FeedData.review_id = ReviewImage.review_id&#10;            where user_id = ('0') and restaurant_id = ('0') order by FeedData.create_date desc&#10;        &#10;&#10;        select FeedData.review_id&#10;            ,picture_url&#10;            ,rating&#10;            ,contents&#10;            ,FeedData.create_date&#10;            ,max(ReviewImage.picture_id) as picture_id&#10;            from FeedData left outer join ReviewImage   &#10;            on FeedData.review_id = ReviewImage.review_id&#10;            union&#10;            select FeedData.review_id&#10;            ,picture_url&#10;            ,rating&#10;            ,contents&#10;            ,FeedData.create_date&#10;            ,ReviewImage.picture_id&#10;            from FeedData left outer join ReviewImage   &#10;            on FeedData.review_id = ReviewImage.review_id&#10;            where user_id = ('0') and restaurant_id = ('0') order by FeedData.create_date desc&#10;        &#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id) as picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,max(ReviewImage.picture_id)&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,FeedData.create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,create_date&#10;,max(ReviewImage.picture_id)&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,create_date&#10;,ReviewImage.picture_id&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;where picture_id is null&#10;select FeedData.review_id&#10;,picture_url&#10;,rating&#10;,contents&#10;,create_date&#10;,max(ReviewImage.picture_id)&#10;from FeedData left outer join ReviewImage   &#10;on FeedData.review_id = ReviewImage.review_id&#10;union&#10;select FeedData.review_id&#10;,picture_url&#10;,rating" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../../../Repository/TorangTestRepository/testrepository/src/main/assets" />
    <property name="project.structure.last.edited" value="Dependencies" />
    <property name="project.structure.proportion" value="0.17" />
    <property name="project.structure.side.proportion" value="0.20304568" />
    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/../../../Repository/TorangTestRepository/testrepository/src/main/assets" />
      <recent name="$PROJECT_DIR$/../../../Repository/TorangTestRepository/testrepository/src/main" />
      <recent name="$PROJECT_DIR$/../../../Repository/TorangTestRepository/testrepository/src/main/java/assets" />
      <recent name="$PROJECT_DIR$/../../../Repository/TorangTestRepository/testrepository/src/main/java/com/example/testrepository" />
      <recent name="$PROJECT_DIR$/../../Myreview/screen_myreview/src/main/java/com/sarang/screen_myreview" />
    </key>
    <key name="CopyKotlinDeclarationDialog.RECENTS_KEY">
      <recent name="com.example.testrepository" />
      <recent name="com.example.myreviewsscreentestapp" />
    </key>
  </component>
  <component name="RunManager" selected="Android App.app">
    <configuration name="app" type="AndroidRunConfigurationType" factoryName="Android App" activateToolWindowBeforeRun="false">
      <module name="MyReviewsScreenTestApp.app" />
      <option name="DEPLOY" value="true" />
      <option name="DEPLOY_APK_FROM_BUNDLE" value="false" />
      <option name="DEPLOY_AS_INSTANT" value="false" />
      <option name="ARTIFACT_NAME" value="" />
      <option name="PM_INSTALL_OPTIONS" value="" />
      <option name="ALL_USERS" value="false" />
      <option name="ALWAYS_INSTALL_WITH_PM" value="false" />
      <option name="DYNAMIC_FEATURES_DISABLED_LIST" value="" />
      <option name="ACTIVITY_EXTRA_FLAGS" value="" />
      <option name="MODE" value="default_activity" />
      <option name="CLEAR_LOGCAT" value="false" />
      <option name="SHOW_LOGCAT_AUTOMATICALLY" value="false" />
      <option name="SKIP_NOOP_APK_INSTALLATIONS" value="true" />
      <option name="FORCE_STOP_RUNNING_APP" value="true" />
      <option name="INSPECTION_WITHOUT_ACTIVITY_RESTART" value="false" />
      <option name="TARGET_SELECTION_MODE" value="DEVICE_AND_SNAPSHOT_COMBO_BOX" />
      <option name="SELECTED_CLOUD_MATRIX_CONFIGURATION_ID" value="-1" />
      <option name="SELECTED_CLOUD_MATRIX_PROJECT_ID" value="" />
      <option name="DEBUGGER_TYPE" value="Auto" />
      <Auto>
        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
        <option name="SHOW_STATIC_VARS" value="true" />
        <option name="WORKING_DIR" value="" />
        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
      </Auto>
      <Hybrid>
        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
        <option name="SHOW_STATIC_VARS" value="true" />
        <option name="WORKING_DIR" value="" />
        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
      </Hybrid>
      <Java />
      <Native>
        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
        <option name="SHOW_STATIC_VARS" value="true" />
        <option name="WORKING_DIR" value="" />
        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
      </Native>
      <Profilers>
        <option name="ADVANCED_PROFILING_ENABLED" value="false" />
        <option name="STARTUP_PROFILING_ENABLED" value="false" />
        <option name="STARTUP_CPU_PROFILING_ENABLED" value="false" />
        <option name="STARTUP_CPU_PROFILING_CONFIGURATION_NAME" value="Java/Kotlin Method Sample (legacy)" />
        <option name="STARTUP_NATIVE_MEMORY_PROFILING_ENABLED" value="false" />
        <option name="NATIVE_MEMORY_SAMPLE_RATE_BYTES" value="2048" />
      </Profilers>
      <option name="DEEP_LINK" value="" />
      <option name="ACTIVITY_CLASS" value="" />
      <option name="SEARCH_ACTIVITY_IN_GLOBAL_SCOPE" value="false" />
      <option name="SKIP_ACTIVITY_VALIDATION" value="false" />
      <method v="2">
        <option name="Android.Gradle.BeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="insertUserData()" type="AndroidTestRunConfigurationType" factoryName="Android Instrumented Tests" temporary="true" nameIsGenerated="true">
      <module name="MyReviewsScreenTestApp.app" />
      <option name="TESTING_TYPE" value="3" />
      <option name="METHOD_NAME" value="insertUserData" />
      <option name="CLASS_NAME" value="com.example.myreviewsscreentestapp.manipulateUserData" />
      <option name="PACKAGE_NAME" value="" />
      <option name="INSTRUMENTATION_RUNNER_CLASS" value="" />
      <option name="EXTRA_OPTIONS" value="" />
      <option name="INCLUDE_GRADLE_EXTRA_OPTIONS" value="true" />
      <option name="RETENTION_ENABLED" value="No" />
      <option name="RETENTION_MAX_SNAPSHOTS" value="2" />
      <option name="RETENTION_COMPRESS_SNAPSHOTS" value="false" />
      <option name="CLEAR_LOGCAT" value="false" />
      <option name="SHOW_LOGCAT_AUTOMATICALLY" value="false" />
      <option name="SKIP_NOOP_APK_INSTALLATIONS" value="true" />
      <option name="FORCE_STOP_RUNNING_APP" value="true" />
      <option name="INSPECTION_WITHOUT_ACTIVITY_RESTART" value="false" />
      <option name="TARGET_SELECTION_MODE" value="DEVICE_AND_SNAPSHOT_COMBO_BOX" />
      <option name="SELECTED_CLOUD_MATRIX_CONFIGURATION_ID" value="-1" />
      <option name="SELECTED_CLOUD_MATRIX_PROJECT_ID" value="" />
      <option name="DEBUGGER_TYPE" value="Auto" />
      <Auto>
        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
        <option name="SHOW_STATIC_VARS" value="true" />
        <option name="WORKING_DIR" value="" />
        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
      </Auto>
      <Hybrid>
        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
        <option name="SHOW_STATIC_VARS" value="true" />
        <option name="WORKING_DIR" value="" />
        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
      </Hybrid>
      <Java />
      <Native>
        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
        <option name="SHOW_STATIC_VARS" value="true" />
        <option name="WORKING_DIR" value="" />
        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
      </Native>
      <Profilers>
        <option name="ADVANCED_PROFILING_ENABLED" value="false" />
        <option name="STARTUP_PROFILING_ENABLED" value="false" />
        <option name="STARTUP_CPU_PROFILING_ENABLED" value="false" />
        <option name="STARTUP_CPU_PROFILING_CONFIGURATION_NAME" value="Java/Kotlin Method Sample (legacy)" />
        <option name="STARTUP_NATIVE_MEMORY_PROFILING_ENABLED" value="false" />
        <option name="NATIVE_MEMORY_SAMPLE_RATE_BYTES" value="2048" />
      </Profilers>
      <method v="2">
        <option name="Android.Gradle.BeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="login()" type="AndroidTestRunConfigurationType" factoryName="Android Instrumented Tests" temporary="true" nameIsGenerated="true">
      <module name="MyReviewsScreenTestApp.app" />
      <option name="TESTING_TYPE" value="3" />
      <option name="METHOD_NAME" value="login" />
      <option name="CLASS_NAME" value="com.example.myreviewsscreentestapp.LoginTest" />
      <option name="PACKAGE_NAME" value="" />
      <option name="INSTRUMENTATION_RUNNER_CLASS" value="" />
      <option name="EXTRA_OPTIONS" value="" />
      <option name="INCLUDE_GRADLE_EXTRA_OPTIONS" value="true" />
      <option name="RETENTION_ENABLED" value="No" />
      <option name="RETENTION_MAX_SNAPSHOTS" value="2" />
      <option name="RETENTION_COMPRESS_SNAPSHOTS" value="false" />
      <option name="CLEAR_LOGCAT" value="false" />
      <option name="SHOW_LOGCAT_AUTOMATICALLY" value="false" />
      <option name="SKIP_NOOP_APK_INSTALLATIONS" value="true" />
      <option name="FORCE_STOP_RUNNING_APP" value="true" />
      <option name="INSPECTION_WITHOUT_ACTIVITY_RESTART" value="false" />
      <option name="TARGET_SELECTION_MODE" value="DEVICE_AND_SNAPSHOT_COMBO_BOX" />
      <option name="SELECTED_CLOUD_MATRIX_CONFIGURATION_ID" value="-1" />
      <option name="SELECTED_CLOUD_MATRIX_PROJECT_ID" value="" />
      <option name="DEBUGGER_TYPE" value="Auto" />
      <Auto>
        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
        <option name="SHOW_STATIC_VARS" value="true" />
        <option name="WORKING_DIR" value="" />
        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
      </Auto>
      <Hybrid>
        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
        <option name="SHOW_STATIC_VARS" value="true" />
        <option name="WORKING_DIR" value="" />
        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
      </Hybrid>
      <Java />
      <Native>
        <option name="USE_JAVA_AWARE_DEBUGGER" value="false" />
        <option name="SHOW_STATIC_VARS" value="true" />
        <option name="WORKING_DIR" value="" />
        <option name="TARGET_LOGGING_CHANNELS" value="lldb process:gdb-remote packets" />
        <option name="SHOW_OPTIMIZED_WARNING" value="true" />
      </Native>
      <Profilers>
        <option name="ADVANCED_PROFILING_ENABLED" value="false" />
        <option name="STARTUP_PROFILING_ENABLED" value="false" />
        <option name="STARTUP_CPU_PROFILING_ENABLED" value="false" />
        <option name="STARTUP_CPU_PROFILING_CONFIGURATION_NAME" value="Java/Kotlin Method Sample (legacy)" />
        <option name="STARTUP_NATIVE_MEMORY_PROFILING_ENABLED" value="false" />
        <option name="NATIVE_MEMORY_SAMPLE_RATE_BYTES" value="2048" />
      </Profilers>
      <method v="2">
        <option name="Android.Gradle.BeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExampleUnitTest.addition_isCorrect" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="--tests &quot;com.example.testrepository.ExampleUnitTest.addition_isCorrect&quot;" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":TorangTestRepository:testDebugUnitTest" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <method v="2" />
    </configuration>
    <configuration name="ExampleUnitTest.userTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="--tests &quot;com.example.myreviewsscreentestapp.ExampleUnitTest.userTest&quot;" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":app:testDebugUnitTest" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <method v="2" />
    </configuration>
    <configuration name="ReviewImageTest.tempImage" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="--tests &quot;com.example.testrepository.ReviewImageTest.tempImage&quot;" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":TorangTestRepository:testDebugUnitTest" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.ReviewImageTest.tempImage" />
        <item itemvalue="Gradle.ExampleUnitTest.addition_isCorrect" />
        <item itemvalue="Android Instrumented Tests.insertUserData()" />
        <item itemvalue="Gradle.ExampleUnitTest.userTest" />
        <item itemvalue="Android Instrumented Tests.login()" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="edd5f021-e0ed-412e-8268-70eedc64a5a2" name="Default Changelist" comment="" />
      <created>1649577964609</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1649577964609</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="kotlin-line">
          <url>file://$PROJECT_DIR$/../../../Repository/TorangTestRepository/testrepository/src/main/java/com/example/testrepository/SeedDatabaseWorker.kt</url>
          <line>41</line>
          <option name="timeStamp" value="19" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="kotlin-line">
          <url>file://$PROJECT_DIR$/../../../Repository/TorangTestRepository/testrepository/src/main/java/com/example/testrepository/SeedDatabaseWorker.kt</url>
          <line>44</line>
          <option name="timeStamp" value="20" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>