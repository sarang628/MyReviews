// Generated by Dagger (https://dagger.dev).
package com.sarang.screen_myreviews;

import com.example.torang_core.repository.LoginRepository;
import com.example.torang_core.repository.MyReviewsRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MyReviewsViewModel_Factory implements Factory<MyReviewsViewModel> {
  private final Provider<MyReviewsRepository> myReviewsRepositoryProvider;

  private final Provider<LoginRepository> loginRepositoryProvider;

  public MyReviewsViewModel_Factory(Provider<MyReviewsRepository> myReviewsRepositoryProvider,
      Provider<LoginRepository> loginRepositoryProvider) {
    this.myReviewsRepositoryProvider = myReviewsRepositoryProvider;
    this.loginRepositoryProvider = loginRepositoryProvider;
  }

  @Override
  public MyReviewsViewModel get() {
    return newInstance(myReviewsRepositoryProvider.get(), loginRepositoryProvider.get());
  }

  public static MyReviewsViewModel_Factory create(
      Provider<MyReviewsRepository> myReviewsRepositoryProvider,
      Provider<LoginRepository> loginRepositoryProvider) {
    return new MyReviewsViewModel_Factory(myReviewsRepositoryProvider, loginRepositoryProvider);
  }

  public static MyReviewsViewModel newInstance(MyReviewsRepository myReviewsRepository,
      LoginRepository loginRepository) {
    return new MyReviewsViewModel(myReviewsRepository, loginRepository);
  }
}
